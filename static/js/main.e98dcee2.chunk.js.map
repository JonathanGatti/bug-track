{"version":3,"sources":["styles/styledComponents.ts","pages/HomePage/styles.ts","components/VerticalHeader/index.tsx","actions/types.ts","api/baseUrl.ts","api/issues/issuesRoutes.ts","actions/issuesActions.ts","api/users/usersRoutes.ts","actions/usersActions.ts","components/RenderIssues/index.tsx","pages/HomePage/index.tsx","utils/priorities.ts","api/comments/commentsRoutes.ts","components/CommentForm/index.tsx","common/logInWarning/index.tsx","components/CreateComment/index.tsx","actions/commentsActions.ts","components/Comment/index.tsx","components/CommentsList/index.tsx","components/Issue/index.tsx","common/spinner/index.tsx","pages/IssuePage/index.tsx","components/UsersList/index.tsx","api/projects/projectsRoutes.tsx","actions/projectsActions.ts","components/ProjectDetail/index.tsx","pages/ProjectPage/index.tsx","styles/mediaQueries.ts","components/RenderProjects/index.tsx","pages/ProjectsList/index.tsx","components/Navbar/index.tsx","actions/currentUserActions.ts","utils/generateId.ts","pages/CreateIssue/index.tsx","pages/UserPage/index.tsx","pages/CreateProject/index.tsx","components/UserForm/index.tsx","pages/CreateUser/index.tsx","components/Modal/index.tsx","pages/LogInPage/index.tsx","App.tsx","reducers/currentUserReducer.ts","reducers/index.ts","reducers/issuesReducer.ts","reducers/projectsReducer.ts","reducers/usersReducer.ts","reducers/commentsReducer.ts","reportWebVitals.ts","index.tsx"],"names":["AppContainer","styled","div","HomeContainer","VerticalHeader","Menu","vertical","inverted","size","Item","name","to","Header","as","FETCH_ISSUES","FETCH_ISSUE","CREATE_ISSUE","DELETE_ISSUE","EDIT_ISSUE","FETCH_PROJECTS","FETCH_PROJECT","DELETE_PROJECT","EDIT_PROJECT","FETCH_USERS","FETCH_USER","CREATE_USER","DELETE_USER","EDIT_USER","LOG_IN","LOG_OUT","FETCH_COMMENTS","FETCH_COMMENT","CREATE_COMMENT","DELETE_COMMENT","EDIT_COMMENT","axios","create","baseURL","process","getIssues","a","issues","get","res","data","console","log","getIssue","id","postIssue","post","headers","patchIssue","patch","deleteIssueById","delete","fetchIssues","dispatch","type","payload","createIssue","getUsers","users","getUserById","postUser","patchUser","logIn","fetchUsers","Container","RenderIssues","list","Table","definition","Row","HeaderCell","Body","map","obj","_id","active","Cell","issueName","author","project","textAlign","Icon","color","priority","Button","renderIssueList","connect","state","Object","values","useEffect","priorities","text","value","getComments","comments","postComment","patchComment","deleteCommentById","CommentForm","onChange","onAddComment","action","Form","reply","TextArea","onClick","content","labelPosition","icon","primary","LogInWarning","currentUser","createComment","setOnCommenting","issueRef","useState","setContent","handleAddComment","newComment","userName","issueReference","handleChange","e","preventDefault","isSignedIn","editComment","deleteComment","comment","date","isEditing","setIsEditing","newContent","setNewContent","Comment","Content","Author","Metadata","Text","renderButtons","fetchComments","Group","dividing","filter","deleteIssue","editIssue","history","issue","isActive","setIsActive","setPriority","description","setDescription","isCommenting","setIsCommenting","handleClick","push","handlePriorityChange","handleDescriptionChange","target","handleSaveChanges","editedIssue","toggleIsActive","handleEditButton","celled","structured","rowSpan","colSpan","issueId","Field","Dropdown","placeholder","fluid","selection","options","Spinner","Segment","Loader","ownProps","match","params","fetchIssue","Issue","editUser","addUser","projectRef","onToggleIsListShowing","renderList","user","userProjects","includes","editedUser","handleAddUser","handleDeleteUser","getProjects","projects","getProject","postProject","patchProject","deleteProjectById","fetchProjects","TableContainer","deleteProject","projectIssues","setProjectIssues","isListShowig","setIsListShowing","projectUsers","setProjectUsers","newUsers","forEach","_project","projectName","_projectIssues","length","toggleIsListShowing","fetchProject","breakpoints","mediaQueries","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","RenderProjects","projectId","renderProjectList","logOutUser","handleLogOut","position","undefined","generateId","Math","random","toString","substr","editProject","setIssueName","setProjectRef","isError","setIsError","handleSubmit","newIssue","handleNameChange","handleProjectRefChange","Input","required","error","className","fetchUser","createProject","setProjectName","UserForm","onNameChange","onPasswordChange","createUser","setName","password","setPassword","handlePasswordChange","newUser","userId","userPassword","ModalTemplate","open","onOpen","Modal","centered","Description","Actions","logInUser","isOpen","setIsOpen","credentials","App","exact","path","render","routeProps","INITIAL_STATE","reducers","combineReducers","_","mapKeys","omit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e98dcee2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  width: 90vw;\n  height: 100vh;\n  margin-left: auto;\n  margin-right: auto;\n`","import styled from 'styled-components';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n`","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\nconst VerticalHeader = () => {\n  return (\n    <Menu vertical inverted size=\"large\">\n      <Menu.Item name=\"Issue\">\n        <Link to=\"/create/issue\">\n          <Menu.Header as=\"h4\">Issue</Menu.Header>\n          <p>Create New Issue</p>\n        </Link>\n      </Menu.Item>\n      <Menu.Item name=\"Project\">\n        <Link to=\"/create/project\">\n          <Menu.Header as=\"h4\">Project</Menu.Header>\n          <p>Create New Project</p>\n        </Link>\n      </Menu.Item>\n      <Menu.Item name=\"Projects List\">\n        <Link to=\"/projects\">\n          <Menu.Header as=\"h4\">Project</Menu.Header>\n          <p>List of All The Projects</p>\n        </Link>\n      </Menu.Item>\n      <Menu.Item name=\"users\">\n        <Link to=\"/create/user\">\n          <Menu.Header as=\"h4\">Sign Up</Menu.Header>\n          <p>Create New Account</p>\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default VerticalHeader;\n","//issues actions:\nexport const FETCH_ISSUES = 'FETCH_ISSUES';\nexport const FETCH_ISSUE = 'FETCH_ISSUE';\nexport const CREATE_ISSUE = 'CREATE_ISSUE';\nexport const DELETE_ISSUE = 'DELETE_ISSUE';\nexport const EDIT_ISSUE = 'EDIT_ISSUE';\n\n//projects actions:\nexport const FETCH_PROJECTS = 'FETCH_PROJECTS';\nexport const FETCH_PROJECT = 'FETCH_PROJECT';\nexport const CREATE_PROJECT = 'CREATE_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const EDIT_PROJECT = 'EDIT_PROJECT';\n\n//users actions:\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_USER = 'FETCH_USER';\nexport const CREATE_USER = 'CREATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\n\n//comments actions:\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS';\nexport const FETCH_COMMENT = 'FETCH_COMMENT';\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\n\n","import axios from 'axios';\nconst baseUrl =process.env.REACT_APP_API_BASE_URL;\n\nexport default axios.create({\n  baseURL: baseUrl\n});","import { Issue } from '../../interfaces';\nimport issues from '../baseUrl';\n\nexport const getIssues = async () => {\n  try {\n    const res = await issues.get('/issues')\n    return res.data;\n  } catch (err){\n    console.log(err)\n  }\n} \n\nexport const getIssue = async (id: string) => {\n  try {\n    const res = await issues.get(`issues/${id}`);\n    return res.data;\n  } catch(err){\n    console.log(err);\n  }\n}\nexport const postIssue = async (data: Issue) => {\n  try {\n    const res = await issues.post('/issues', \n    data\n    ,{\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }) \n    return res.data;\n    }catch(err){\n      console.log(err);\n  }\n}\n\nexport const patchIssue = async (id: any, data: Issue) => {\n  try {\n    let res = await issues.patch(`/issues/${id}`, data)\n    return res.data \n  } catch(err) {\n    console.log(err);\n  }\n}\n\nexport const deleteIssueById = async (id: string) => {\n  try {\n    await issues.delete(`/issues/${id}`)\n    return id;\n  } catch (err){\n    console.log(err);\n  }\n}\n\n","import {FETCH_ISSUES, FETCH_ISSUE, CREATE_ISSUE, EDIT_ISSUE, DELETE_ISSUE} from './types';\nimport {getIssues, getIssue, postIssue, patchIssue, deleteIssueById} from '../api/issues/issuesRoutes';\nimport { Issue } from '../interfaces';\nimport {Dispatch} from 'redux';\n\nexport const fetchIssues = () => async (dispatch: Dispatch)  => {\n  const res = await getIssues();\n  dispatch({type: FETCH_ISSUES, payload: res})\n  return res;\n  }\n\nexport const fetchIssue = (id: string) => async (dispatch: Dispatch) => {\n  const res = await getIssue(id);\n  dispatch({type: FETCH_ISSUE, payload: res})\n  }\n\nexport const createIssue = (data: Issue) => async (dispatch: Dispatch) => {\n    const res = await postIssue(data);\n    dispatch({type: CREATE_ISSUE, payload: res})\n    return res;\n  }\n\nexport const editIssue = (id: any, data: Issue) => async (dispatch: Dispatch) => {\n    const res = await patchIssue(id, data);\n\n    dispatch({type: EDIT_ISSUE, payload: res})\n  }\n\nexport const deleteIssue = (id: string) => async (dispatch: Dispatch) => {\n  await deleteIssueById(id);\n  dispatch({type: DELETE_ISSUE, payload: id})\n}","import users from '../baseUrl';\nimport {Author} from '../../interfaces';\n\nexport const getUsers = async () => {\n  try {\n    const res = await users.get('/users');\n    return res.data\n  } catch(err){\n    console.log(err);\n  }\n}\n\nexport const getUserById = async (id: string) => {\n  try {\n    const res = await users.get(`/users/${id}`);\n    return res.data;\n  } catch(err){\n    console.log(err)\n  }\n}\n\nexport const postUser = async (data: Author) => {\n  try {\n    users.post('/users', \n    data, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    return data\n  } catch (err){\n    console.log(err);\n  }\n}\n\nexport const patchUser = async (id: string, data: any) => {\n  try {\n    let res = await users.patch(`/users/${id}`, data);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const logIn = async (data: any) => {\n  try {\n    const res = await users.post('/users/login', \n    data, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    return res\n  } catch (err){\n    console.log(err);\n  }\n}\n\nexport const deleteUserById = async (id:string) => {\n  try {\n    await users.delete(`/users/${id}`);\n    return id;\n  } catch(err){\n    console.log(err);\n  }\n}","import {FETCH_USER,FETCH_USERS, CREATE_USER, DELETE_USER, EDIT_USER } from './types';\nimport {getUsers, getUserById, postUser,deleteUserById, patchUser} from '../api/users/usersRoutes';\nimport {Dispatch} from 'redux';\nimport {Author} from '../interfaces';\n\nexport const fetchUsers = () => async (dispatch: Dispatch) => {\n  const res = await getUsers();\n  dispatch({type: FETCH_USERS, payload: res});\n}\n\nexport const fetchUser = (id: string) => async (dispatch: Dispatch) => {\n  const res = await getUserById(id);\n  dispatch({type: FETCH_USER, payload: res});\n}\n\nexport const createUser = (data: Author) => async (dispatch: Dispatch) => {\n   const res = await postUser(data);\n   dispatch({type: CREATE_USER, payload: res});\n}\n\n\nexport const editUser = (id: string, data: any) => async (dispatch: Dispatch) => {\n  const res = await patchUser(id, data)\n  dispatch({type: EDIT_USER, payload: res})\n}\n\nexport const deleteUser = (id: string) => async (dispatch: Dispatch) => {\n  await deleteUserById(id)\n  dispatch({type: DELETE_USER, payload: id})\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport { Issue } from '../../interfaces';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 65vw;\n`;\n\nconst RenderIssues = ({ list }: any) => {\n  const renderIssueList = (obj: Issue) => {\n    if (!obj._id) {\n      return null;\n    } else {\n      return (\n        <Table.Row active={obj.active} key={obj._id}>\n          <Table.Cell>{obj.issueName}</Table.Cell>\n          <Table.Cell>{obj.author}</Table.Cell>\n          <Table.Cell>{obj.project}</Table.Cell>\n          <Table.Cell textAlign=\"center\">\n            {obj.active ? (\n              <Icon color=\"green\" name=\"checkmark\" size=\"large\" />\n            ) : (\n              <Icon color=\"red\" name=\"close\" size=\"large\" />\n            )}\n          </Table.Cell>\n          <Table.Cell>{obj.priority}</Table.Cell>\n          <Table.Cell>\n            <Link to={`/issue/${obj._id}`}>\n              <Button inverted color=\"blue\">\n                View More\n              </Button>\n            </Link>\n          </Table.Cell>\n        </Table.Row>\n      );\n    }\n  };\n  return (\n    <Container>\n      <Table definition>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Issue Name</Table.HeaderCell>\n            <Table.HeaderCell>Author</Table.HeaderCell>\n            <Table.HeaderCell>Project Reference</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n            <Table.HeaderCell>Priority</Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {list.map((obj: Issue) => renderIssueList(obj))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nexport default RenderIssues;\n","import React, { useEffect } from 'react';\nimport { HomeContainer } from './styles';\nimport { connect } from 'react-redux';\nimport VerticalHeader from '../../components/VerticalHeader';\nimport { fetchIssues } from '../../actions/issuesActions';\nimport { Issue } from '../../interfaces';\nimport { fetchUsers } from '../../actions/usersActions';\nimport RenderIssues from '../../components/RenderIssues';\n\ninterface HomePageProps {\n  fetchIssues: () => void;\n  issues: Issue[];\n  fetchUsers: () => void;\n}\n\nconst HomePage = ({ fetchIssues, issues, fetchUsers }: HomePageProps) => {\n  useEffect(() => {\n    fetchIssues();\n    fetchUsers();\n  }, []);\n  return (\n    <HomeContainer>\n      <VerticalHeader />\n      <RenderIssues list={issues} />\n    </HomeContainer>\n  );\n};\n\ninterface mapState {\n  issues: Issue[];\n}\n\nconst mapStateToProps = (state: mapState) => {\n  return { issues: Object.values(state.issues) };\n};\n\nexport default connect(mapStateToProps, { fetchIssues, fetchUsers })(HomePage);\n","export const priorities = [\n  {\n    text: 'high',\n    value: 'high',\n  },\n  {\n    text: 'medium',\n    value: 'medium',\n  },\n  {\n    text: 'low',\n    value: 'low',\n  },\n];","import {  CommentInterface } from '../../interfaces';\nimport comments from '../baseUrl';\n\nexport const getComments = async () => {\n  try {\n    const res = await comments.get('/comments')\n    return res.data;\n  } catch (err){\n    console.log(err)\n  }\n} \n\nexport const getComment = async (id: string) => {\n  try {\n    const res = await comments.get(`comments/${id}`);\n    return res.data;\n  } catch(err){\n    console.log(err);\n  }\n}\nexport const postComment = async (data: CommentInterface) => {\n  try {\n    const res = await comments.post('/comments', \n    data\n    ,{\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }) \n    return res.data;\n    }catch(err){\n      console.log(err);\n  }\n}\n\nexport const patchComment = async (id: any, data: any) => {\n  try {\n    let res = await comments.patch(`/comments/${id}`, data)\n    return res.data \n  } catch(err) {\n    console.log(err);\n  }\n}\n\nexport const deleteCommentById = async (id: string) => {\n  try {\n    await comments.delete(`/comments/${id}`)\n    return id;\n  } catch (err){\n    console.log(err);\n  }\n}\n\n","import React from 'react';\nimport { Form, Button, TextAreaProps, ButtonProps } from 'semantic-ui-react';\n\ninterface CommentFormProps {\n  onChange: (\n    e: React.ChangeEvent<HTMLTextAreaElement>,\n    data: TextAreaProps\n  ) => void;\n  onAddComment: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    data: ButtonProps\n  ) => void;\n  action: string;\n}\nconst CommentForm = ({ onChange, onAddComment, action }: CommentFormProps) => {\n  return (\n    <Form>\n      <Form reply>\n        <Form.TextArea onChange={onChange} />\n        <Button\n          onClick={onAddComment}\n          content={`${action} Comment`}\n          labelPosition=\"left\"\n          icon=\"edit\"\n          primary\n        />\n      </Form>\n    </Form>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin: auto;\n  width: 20vw;\n  height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst LogInWarning = () => {\n  return (\n    <Container>\n      <h4>You must be logged in</h4>\n      <Link to=\"/login\">\n        <Button color=\"red\">Log In</Button>\n      </Link>\n    </Container>\n  );\n};\n\nexport default LogInWarning;\n","import React, { useState, ChangeEvent } from 'react';\nimport { TextAreaProps } from 'semantic-ui-react';\nimport { createComment } from '../../actions/commentsActions';\nimport { connect } from 'react-redux';\nimport CommentForm from '../CommentForm';\nimport LogInWarning from '../../common/logInWarning';\nimport { CommentInterface, CurrentUser } from '../../interfaces';\n\ninterface CreateCommentProps {\n  createComment: (data: CommentInterface | any) => void;\n  currentUser: CurrentUser;\n  setOnCommenting: (value: boolean) => void;\n  issueRef: string;\n}\n\nconst CreateComment = ({\n  createComment,\n  currentUser,\n  setOnCommenting,\n  issueRef,\n}: CreateCommentProps) => {\n  const [content, setContent] = useState<string | undefined | number>('');\n\n  const handleAddComment = () => {\n    if (content !== '') {\n      const newComment = {\n        author: currentUser.userName,\n        content: content,\n        issueReference: issueRef,\n      };\n      createComment(newComment);\n      setOnCommenting(false);\n    } else return null;\n  };\n  const handleChange = (\n    e: ChangeEvent<HTMLTextAreaElement>,\n    data: TextAreaProps\n  ) => {\n    e.preventDefault();\n    setContent(data.value);\n  };\n\n  const render = () => {\n    if (!currentUser.isSignedIn) {\n      return <LogInWarning />;\n    } else {\n      return (\n        <CommentForm\n          onAddComment={handleAddComment}\n          onChange={handleChange}\n          action=\"Add\"\n        />\n      );\n    }\n  };\n  return <>{render()}</>;\n};\n\ninterface mapState {\n  currentUser: CurrentUser;\n}\n\nconst mapStateToProps = (state: any) => {\n  return { currentUser: state.currentUser };\n};\nexport default connect(mapStateToProps, { createComment })(CreateComment);\n","import {FETCH_COMMENTS, FETCH_COMMENT, CREATE_COMMENT, DELETE_COMMENT, EDIT_COMMENT} from './types';\nimport {getComments, getComment, postComment, patchComment, deleteCommentById} from '../api/comments/commentsRoutes';\nimport { CommentInterface } from '../interfaces';\nimport {Dispatch} from 'redux';\n\nexport const fetchComments = () => async (dispatch: Dispatch)  => {\n  const res = await getComments();\n  dispatch({type: FETCH_COMMENTS, payload: res})\n  return res;\n  }\n\nexport const fetchComment = (id: string) => async (dispatch: Dispatch) => {\n  const res = await getComment(id);\n  dispatch({type: FETCH_COMMENT, payload: res})\n  }\n\nexport const createComment = (data: CommentInterface) => async (dispatch: Dispatch) => {\n    const res = await postComment(data);\n    dispatch({type: CREATE_COMMENT, payload: res})\n    return res;\n  }\n\nexport const editComment = (id: any, data: any) => async (dispatch: Dispatch) => {\n    const res = await patchComment(id, data);\n    \n    dispatch({type: EDIT_COMMENT, payload: res})\n  }\n\nexport const deleteComment = (id: string) => async (dispatch: Dispatch) => {\n  await deleteCommentById(id);\n  dispatch({type: DELETE_COMMENT, payload: id})\n}","import React, { useState, ChangeEvent } from 'react';\nimport { Comment, Button, TextAreaProps } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { editComment, deleteComment } from '../../actions/commentsActions';\nimport CommentForm from '../CommentForm';\nimport styled from 'styled-components';\nimport { CommentInterface, CurrentUser } from '../../interfaces';\nimport DeleteConfirmation from '../DeleteConfirmation';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\ninterface CommentDetailProps {\n  comment: CommentInterface;\n  currentUser: CurrentUser;\n  editComment: (id: string, data: any) => void;\n  deleteComment: (id: string) => void;\n}\nconst CommentDetail = ({\n  comment,\n  currentUser,\n  editComment,\n  deleteComment,\n}: CommentDetailProps) => {\n  const { _id, author, content, date } = comment;\n  const [isEditing, setIsEditing] = useState(false);\n  const [newContent, setNewContent] = useState<number | string | undefined>('');\n\n  const handleDeleteButton = (id: string | undefined) => {\n    if (id) deleteComment(id);\n  };\n\n  const handleEditComment = () => {\n    if (newContent === '') {\n      setIsEditing(false);\n    } else {\n      const newComment = {\n        content: newContent,\n      };\n      if (_id) editComment(_id, newComment);\n      setIsEditing(false);\n    }\n  };\n\n  const handleChange = (\n    e: ChangeEvent<HTMLTextAreaElement>,\n    data: TextAreaProps\n  ) => {\n    e.preventDefault();\n    setNewContent(data.value);\n  };\n\n  const renderButtons = () => {\n    if (author === currentUser.userName) {\n      return (\n        <>\n          <Button inverted color=\"green\" onClick={() => setIsEditing(true)}>\n            Edit\n          </Button>\n          <Button inverted color=\"red\" onClick={() => handleDeleteButton(_id)}>\n            Delete\n          </Button>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Container>\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{author}</Comment.Author>\n          <Comment.Metadata>\n            <div>{date}</div>\n          </Comment.Metadata>\n          {!isEditing ? (\n            <>\n              <Comment.Text>\n                <div>\n                  {content} {renderButtons()}\n                </div>\n              </Comment.Text>\n            </>\n          ) : (\n            <CommentForm\n              onChange={handleChange}\n              onAddComment={handleEditComment}\n              action=\"Edit\"\n            />\n          )}\n        </Comment.Content>\n      </Comment>\n    </Container>\n  );\n};\n\nexport default connect(null, { editComment, deleteComment })(CommentDetail);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchComments } from '../../actions/commentsActions';\nimport { Comment, Header } from 'semantic-ui-react';\nimport CommentDetail from '../Comment';\nimport { CommentInterface, CurrentUser } from '../../interfaces';\n\ninterface CommentListProps {\n  issueRef: string;\n  fetchComments: () => void;\n  comments: CommentInterface[];\n  currentUser: CurrentUser;\n}\n\nconst CommentsList = ({\n  issueRef,\n  fetchComments,\n  comments,\n  currentUser,\n}: CommentListProps) => {\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const renderComments = () => {\n    const referencedComments = comments.filter((comment: any) => {\n      return comment.issueReference === issueRef;\n    });\n    return referencedComments.map((comment: any) => (\n      <CommentDetail comment={comment} currentUser={currentUser} />\n    ));\n  };\n  return (\n    <Comment.Group>\n      <Header as=\"h3\" dividing>\n        Comments\n      </Header>\n      {renderComments()}\n    </Comment.Group>\n  );\n};\n\ninterface mapState {\n  comments: CommentInterface[];\n  currentUser: CurrentUser;\n}\n\nconst mapStateToProps = (state: mapState) => {\n  return {\n    comments: Object.values(state.comments),\n    currentUser: state.currentUser,\n  };\n};\nexport default connect(mapStateToProps, { fetchComments })(CommentsList);\n","import React, { useState, ChangeEvent } from 'react';\nimport { Issue } from '../../interfaces';\nimport {\n  Table,\n  Icon,\n  Button,\n  Form,\n  Dropdown,\n  DropdownProps,\n  TextAreaProps,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { deleteIssue, editIssue } from '../../actions/issuesActions';\nimport { History, LocationState } from 'history';\nimport { priorities } from '../../utils/priorities';\nimport CreateComment from '../CreateComment';\nimport CommentsList from '../CommentsList';\n\ninterface IssueDetailProps {\n  history: History<LocationState>;\n  issue: Issue;\n  editIssue: any;\n  deleteIssue: (id: string) => void;\n  currentUser?: any;\n}\n\nconst IssueDetail = ({\n  history,\n  issue,\n  deleteIssue,\n  editIssue,\n  currentUser,\n}: IssueDetailProps) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isActive, setIsActive] = useState<boolean>(issue.active);\n  const [priority, setPriority] = useState<any>(issue.priority);\n  const [description, setDescription] = useState(issue.description);\n  const [isCommenting, setIsCommenting] = useState(false);\n\n  const handleClick = async (id: any) => {\n    deleteIssue(id);\n    history.push('/');\n  };\n  const handlePriorityChange = (\n    e: React.SyntheticEvent<HTMLElement, Event>,\n    data: DropdownProps\n  ) => {\n    setPriority(data.value);\n  };\n\n  const handleDescriptionChange = (\n    e: ChangeEvent<HTMLTextAreaElement>,\n    data: TextAreaProps\n  ) => {\n    setDescription(e.target.value);\n  };\n\n  const handleSaveChanges = (id: any) => {\n    setIsEditing(false);\n    const editedIssue = {\n      description: description,\n      active: isActive,\n      priority: priority,\n    };\n    editIssue(issue._id, editedIssue);\n  };\n\n  const toggleIsActive = () => setIsActive(!isActive);\n\n  const handleEditButton = () => setIsEditing(true);\n\n  const renderButtons = (issue: Issue) => {\n    if (!issue._id) return null;\n    if (!currentUser.isSignedIn) return null;\n    else {\n      return (\n        <>\n          {!isEditing ? (\n            <Button onClick={handleEditButton} inverted color=\"green\">\n              Edit\n            </Button>\n          ) : (\n            <Button\n              onClick={() => handleSaveChanges(issue._id)}\n              inverted\n              color=\"blue\"\n            >\n              Save Changes\n            </Button>\n          )}\n          <Button onClick={() => handleClick(issue._id)} inverted color=\"red\">\n            Delete\n          </Button>\n        </>\n      );\n    }\n  };\n\n  const renderActiveButtons = () => {\n    if (isEditing) {\n      return (\n        <>\n          {isActive ? (\n            <Button onClick={toggleIsActive} inverted color=\"red\">\n              Set Inactive\n            </Button>\n          ) : (\n            <Button onClick={toggleIsActive} inverted color=\"green\">\n              Set Active\n            </Button>\n          )}\n        </>\n      );\n    } else return null;\n  };\n\n  const renderPrioritiesOptions = () => {\n    if (isEditing) {\n      return (\n        <Form.Field>\n          <label>Select the priority</label>\n          <Dropdown\n            placeholder=\"Select The Priority\"\n            fluid\n            selection\n            options={priorities}\n            value={priority}\n            onChange={handlePriorityChange}\n          />\n        </Form.Field>\n      );\n    } else return priority;\n  };\n\n  const renderDescriptionForm = () => {\n    if (isEditing) {\n      return (\n        <Form.Field>\n          <label>Description</label>\n          <Form.TextArea\n            onChange={handleDescriptionChange}\n            placeholder=\"Description\"\n            value={description}\n          />\n        </Form.Field>\n      );\n    } else {\n      return description;\n    }\n  };\n  return (\n    <>\n      <Table celled structured>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell rowSpan=\"2\">Id</Table.HeaderCell>\n            <Table.HeaderCell rowSpan=\"2\">Project Ref</Table.HeaderCell>\n            <Table.HeaderCell rowSpan=\"2\">Author</Table.HeaderCell>\n            <Table.HeaderCell colSpan=\"3\">Status</Table.HeaderCell>\n          </Table.Row>\n          <Table.Row>\n            <Table.HeaderCell>Active</Table.HeaderCell>\n            <Table.HeaderCell>Priority</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>{issue.issueId}</Table.Cell>\n            <Table.Cell>{issue.project}</Table.Cell>\n            <Table.Cell>{issue.author}</Table.Cell>\n            <Table.Cell textAlign=\"center\">\n              {isActive ? (\n                <Icon color=\"green\" name=\"checkmark\" size=\"large\" />\n              ) : (\n                <Icon color=\"red\" name=\"close\" size=\"large\" />\n              )}\n              {renderActiveButtons()}\n            </Table.Cell>\n            <Table.Cell>{renderPrioritiesOptions()}</Table.Cell>\n            <Table.Cell>{issue.date}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      <Table celled structured>\n        <Table.Header>\n          <Table.HeaderCell>Description</Table.HeaderCell>\n        </Table.Header>\n        <Table.Row>\n          <Table.Cell>{renderDescriptionForm()}</Table.Cell>\n        </Table.Row>\n      </Table>\n      {renderButtons(issue)}\n      <Button inverted color=\"blue\" onClick={() => setIsCommenting(true)}>\n        Add a comment\n      </Button>\n      {isCommenting && (\n        <CreateComment\n          issueRef={issue.issueId}\n          setOnCommenting={setIsCommenting}\n        />\n      )}\n      <CommentsList issueRef={issue.issueId} />\n    </>\n  );\n};\n\nexport default connect(null, { deleteIssue, editIssue })(IssueDetail);\n","import React from 'react';\nimport { Loader, Segment } from 'semantic-ui-react';\n\nconst Spinner = () => (\n  <Segment>\n    <Loader active />\n  </Segment>\n);\n\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport IssueDetail from '../../components/Issue';\nimport { fetchIssue } from '../../actions/issuesActions';\nimport { connect } from 'react-redux';\nimport Spinner from '../../common/spinner';\nimport { CurrentUser, Issue } from '../../interfaces';\nimport { History, LocationState } from 'history';\n\ninterface MatchParams {\n  params: string;\n  id: string;\n}\ninterface IssuePageProps extends RouteComponentProps<MatchParams> {\n  history: History<LocationState>;\n  fetchIssue: (id: string) => void;\n  match: any;\n  issue: Issue;\n  currentUser: CurrentUser;\n}\n\nconst IssuePage = ({\n  history,\n  match,\n  fetchIssue,\n  issue,\n  currentUser,\n}: IssuePageProps) => {\n  useEffect(() => {\n    fetchIssue(match.params.id);\n  }, []);\n\n  const render = () => {\n    if (!issue) {\n      return <Spinner />;\n    } else {\n      return (\n        <div>\n          <IssueDetail\n            history={history}\n            issue={issue}\n            currentUser={currentUser}\n          />\n        </div>\n      );\n    }\n  };\n  return <>{render()}</>;\n};\n\ninterface State {\n  issues: Issue[];\n  currentUser: CurrentUser;\n}\ninterface OwnProps {\n  match: any;\n}\n\nconst mapStateToProps = (state: State, ownProps: OwnProps) => {\n  return {\n    issue: state.issues[ownProps.match.params.id],\n    currentUser: state.currentUser,\n  };\n};\nexport default connect(mapStateToProps, { fetchIssue })(IssuePage);\n","import React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Author } from '../../interfaces';\nimport { editUser } from '../../actions/usersActions';\nimport { connect } from 'react-redux';\n\nconst Container = styled.div`\n  max-width: 40vw;\n  max-height: 23vh;\n  overflow: scroll;\n`;\n\ninterface UsersListProps {\n  users: Author[];\n  addUser: boolean;\n  projectRef: string;\n  editUser: (id: string, data: any) => void;\n  onToggleIsListShowing?: () => void;\n}\nconst UsersList = ({\n  users,\n  addUser,\n  projectRef,\n  editUser,\n  onToggleIsListShowing,\n}: UsersListProps) => {\n  const handleAddUser = (user: Author) => {\n    const includes = user.userProjects.includes(projectRef);\n    if (includes && onToggleIsListShowing) onToggleIsListShowing();\n    else {\n      const editedUser = {\n        userProjects: [...user.userProjects, projectRef],\n      };\n      editUser(user._id, editedUser);\n    }\n    if (onToggleIsListShowing) onToggleIsListShowing();\n  };\n\n  const handleDeleteUser = (user: Author) => {\n    const newProjects = user.userProjects.filter(\n      (project: string) => project !== projectRef\n    );\n    const editedUser = {\n      userProjects: newProjects,\n    };\n    editUser(user._id, editedUser);\n  };\n\n  const renderList = (user: Author) => {\n    if (!user._id) return null;\n    if (!user.userProjects) return null;\n    else {\n      return (\n        <Table.Row>\n          <Table.Cell>{user.userName}</Table.Cell>\n          <Table.Cell>\n            {addUser ? (\n              <Button\n                inverted\n                color=\"green\"\n                onClick={() => handleAddUser(user)}\n              >\n                Add User\n              </Button>\n            ) : (\n              <>\n                <Link to={`/user/${user._id}`}>\n                  <Button size=\"small\" inverted color=\"green\">\n                    View User\n                  </Button>\n                </Link>\n                <Button\n                  onClick={() => handleDeleteUser(user)}\n                  size=\"small\"\n                  inverted\n                  color=\"red\"\n                >\n                  Remove User\n                </Button>\n              </>\n            )}\n          </Table.Cell>\n        </Table.Row>\n      );\n    }\n  };\n  return (\n    <Container>\n      <Table>\n        <Table.Body>{users.map((user: Author) => renderList(user))}</Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nexport default connect(null, { editUser })(UsersList);\n","import { Project } from '../../interfaces';\nimport projects from '../baseUrl';\n\nexport const getProjects = async () => {\n  try {\n    const res = await projects.get('/projects');\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getProject = async (id: string) => {\n  try {\n    const res = await projects.get(`projects/${id}`);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const postProject = async (data: Project) => {\n  try {\n    projects.post('/projects', data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const patchProject = async (id: string, data: any) => {\n  try {\n    let res = await projects.patch(`/projects/${id}`, data);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteProjectById = async (id: string) => {\n  try {\n    await projects.delete(`/projects/${id}`);\n    return id;\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import {FETCH_PROJECTS, FETCH_PROJECT, EDIT_PROJECT,DELETE_PROJECT, CREATE_PROJECT} from './types';\nimport {getProject, getProjects, postProject, patchProject, deleteProjectById} from '../api/projects/projectsRoutes';\nimport {Dispatch} from 'redux';\nimport {Project} from '../interfaces';\n\nexport const fetchProjects = () => async (dispatch: Dispatch) => {\n  const res = await getProjects();\n  dispatch({type: FETCH_PROJECTS, payload: res});\n}\n\nexport const fetchProject = (id: string) => async (dispatch: Dispatch) => {\n  const res = await getProject(id);\n  dispatch({type: FETCH_PROJECT, payload: res})\n}\n\nexport const createProject = (data: Project) => async (dispatch: Dispatch) => {\n  const res = await postProject(data);\n  dispatch({type: CREATE_PROJECT, payload: res})\n}\n\nexport const editProject = (id: string, data: any) => async (dispatch: Dispatch) => {\n  const res = await patchProject(id, data)\n  dispatch({type: EDIT_PROJECT, payload: res})\n}\n\nexport const deleteProject = (id: string) => async (dispatch:Dispatch) => {\n  await deleteProjectById(id);\n  dispatch({type: DELETE_PROJECT, payload: id})\n}","import React, { useEffect, useState } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport UsersList from '../UsersList';\nimport { deleteProject } from '../../actions/projectsActions';\nimport { fetchIssues } from '../../actions/issuesActions';\nimport { fetchUsers } from '../../actions/usersActions';\nimport { connect } from 'react-redux';\nimport { Author, Issue } from '../../interfaces';\nimport { ProjectDetailProps, mapState } from './interfaces';\nimport RenderIssues from '../RenderIssues';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  padding-left: 0;\n`;\n\nconst TableContainer = styled.div`\n  width: 25vw;\n`;\n\nconst ProjectDetail = ({\n  history,\n  project,\n  deleteProject,\n  issues,\n  currentUser,\n  users,\n}: ProjectDetailProps) => {\n  const [projectIssues, setProjectIssues] = useState<any>([]);\n  const [isListShowig, setIsListShowing] = useState(false);\n  const [projectUsers, setProjectUsers] = useState<any>([]);\n  useEffect(() => {\n    let newUsers: Author[] = [];\n\n    users.forEach((user: Author) => {\n      if (user.userProjects) {\n        user.userProjects.forEach((_project: string) => {\n          if (_project === project.projectName) {\n            newUsers.push(user);\n          }\n        });\n      }\n    });\n    setProjectUsers([...newUsers]);\n  }, [projectUsers]);\n\n  useEffect(() => {\n    const _projectIssues = issues.filter((issues: Issue) => {\n      return issues.project === project.projectName;\n    });\n    setProjectIssues([..._projectIssues]);\n  }, [projectIssues.length]);\n\n  const handleClick = (id: string | undefined) => {\n    if (!id) return null;\n    deleteProject(id);\n    history.push('/');\n  };\n\n  const toggleIsListShowing = () => {\n    setIsListShowing(!isListShowig);\n  };\n  return (\n    <>\n      <h2>{project.projectName}</h2>\n      <Container>\n        <RenderIssues list={projectIssues} />\n        <TableContainer>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Team</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <UsersList\n              users={projectUsers}\n              addUser={false}\n              projectRef={project.projectName}\n            />\n          </Table>\n        </TableContainer>\n      </Container>\n\n      {currentUser.isSignedIn && (\n        <>\n          <Link to=\"/create/issue\">\n            <Button inverted color=\"blue\">\n              Add an Issue\n            </Button>\n          </Link>\n          <Button onClick={toggleIsListShowing} inverted color=\"green\">\n            Add A Member\n          </Button>\n          <Button onClick={() => handleClick(project._id)} inverted color=\"red\">\n            Delete\n          </Button>\n        </>\n      )}\n      {isListShowig && (\n        <UsersList\n          users={users}\n          addUser={true}\n          projectRef={project.projectName}\n          onToggleIsListShowing={toggleIsListShowing}\n        />\n      )}\n    </>\n  );\n};\n\nexport default connect(null, {\n  deleteProject,\n  fetchIssues,\n  fetchUsers,\n})(ProjectDetail);\n","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport ProjectDetail from '../../components/ProjectDetail';\nimport { CurrentUser, Project, Author, Issue } from '../../interfaces';\nimport { connect } from 'react-redux';\nimport { fetchProject } from '../../actions/projectsActions';\nimport { fetchIssues } from '../../actions/issuesActions';\nimport { fetchUsers } from '../../actions/usersActions';\nimport Spinner from '../../common/spinner';\nimport { History, LocationState } from 'history';\n\ninterface MatchParams {\n  params: string;\n  id: string;\n}\ninterface ProjectPageProps extends RouteComponentProps<MatchParams> {\n  history: History<LocationState>;\n  fetchProject: (id: string) => void;\n  match: any;\n  project: Project;\n  currentUser: CurrentUser | any;\n  fetchUsers: () => void | any;\n  users: Author[] | any;\n  fetchIssues: () => void | any;\n  issues: Issue[] | any;\n}\n\nconst ProjectPage = ({\n  history,\n  match,\n  fetchProject,\n  fetchIssues,\n  fetchUsers,\n  project,\n  issues,\n  users,\n  currentUser,\n}: ProjectPageProps) => {\n  useEffect(() => {\n    fetchIssues();\n    fetchUsers();\n    fetchProject(match.params.id);\n  }, []);\n\n  const render = () => {\n    if (!project) {\n      return <Spinner />;\n    } else {\n      return (\n        <ProjectDetail\n          project={project}\n          history={history}\n          currentUser={currentUser}\n          issues={issues}\n          users={users}\n        />\n      );\n    }\n  };\n  return <div>{render()}</div>;\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  return {\n    project: state.projects[ownProps.match.params.id],\n    currentUser: state.currentUser,\n    issues: Object.values(state.issues),\n    users: Object.values(state.users),\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchProject,\n  fetchIssues,\n  fetchUsers,\n})(ProjectPage);\n","export const breakpoints = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopNumber: 1024,\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const mediaQueries = {\n  mobileS: `(max-width: ${breakpoints.mobileS})`,\n  mobileM: `(max-width: ${breakpoints.mobileM})`,\n  mobileL: `(max-width: ${breakpoints.mobileL})`,\n  tablet: `(max-width: ${breakpoints.tablet})`,\n  laptop: `(max-width: ${breakpoints.laptop})`,\n  laptopL: `(max-width: ${breakpoints.laptopL})`,\n  desktop: `(max-width: ${breakpoints.desktop})`,\n  desktopL: `(max-width: ${breakpoints.desktop})`,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Project } from '../../interfaces';\nimport { Table, Button } from 'semantic-ui-react';\n\nconst RenderProjects = ({ list }: any) => {\n  const renderProjectList = (obj: Project) => {\n    if (!obj._id) {\n      return null;\n    } else {\n      return (\n        <Table.Row key={obj._id}>\n          <Table.Cell>{obj.projectId}</Table.Cell>\n          <Table.Cell>{obj.projectName}</Table.Cell>\n          <Table.Cell>\n            <Link to={`/project/${obj._id}`}>\n              <Button inverted color=\"blue\">\n                View More\n              </Button>\n            </Link>\n          </Table.Cell>\n        </Table.Row>\n      );\n    }\n  };\n  return (\n    <Table definition>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Project id</Table.HeaderCell>\n          <Table.HeaderCell>Project Name</Table.HeaderCell>\n          <Table.HeaderCell />\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {list.map((obj: Project) => renderProjectList(obj))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default RenderProjects;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchProjects } from '../../actions/projectsActions';\nimport styled from 'styled-components';\nimport { Project } from '../../interfaces';\nimport { mediaQueries } from '../../styles/mediaQueries';\nimport RenderProjects from '../../components/RenderProjects';\n\nconst Container = styled.div`\n  width: 75vw;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  @media ${mediaQueries.laptop} {\n    width: 90vw;\n  }\n`;\n\ninterface ProjectListProps {\n  fetchProjects: () => void;\n  projects: Project[];\n}\n\nconst ProjectsList = ({ fetchProjects, projects }: ProjectListProps) => {\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  return (\n    <Container>\n      <h3>Projects List</h3>\n      <RenderProjects list={projects} />\n    </Container>\n  );\n};\n\ninterface mapState {\n  projects: Project[];\n}\n\nconst mapStateToProps = (state: mapState) => {\n  return { projects: Object.values(state.projects) };\n};\n\nexport default connect(mapStateToProps, { fetchProjects })(ProjectsList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { logOutUser } from '../../actions/currentUserActions';\nimport { CurrentUser } from '../../interfaces';\n\ninterface NavbarProps {\n  logOutUser: () => void;\n  currentUser: CurrentUser;\n}\n\nconst Navbar = ({ logOutUser, currentUser }: NavbarProps) => {\n  const handleLogOut = () => {\n    logOutUser();\n  };\n\n  const renderButtons = () => {\n    if (currentUser.isSignedIn === undefined) return null;\n    if (!currentUser.isSignedIn) {\n      return (\n        <Link to=\"/login\">\n          <Button inverted color=\"red\">\n            Log in\n          </Button>\n        </Link>\n      );\n    } else {\n      return (\n        <>\n          {currentUser ? (\n            <Menu.Item position=\"right\">\n              Welcome back {currentUser.userName}\n            </Menu.Item>\n          ) : null}\n          <Button onClick={handleLogOut} inverted color=\"red\">\n            Log Out\n          </Button>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Menu inverted>\n      <Menu.Item>\n        <Link to=\"/\">Home</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/projects\">Projects</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/create/issue\">Create Issue</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/create/project\">Create Project</Link>\n      </Menu.Item>\n      <Menu.Item position=\"right\">{renderButtons()}</Menu.Item>\n    </Menu>\n  );\n};\n\ninterface mapState {\n  currentUser: CurrentUser;\n}\n\nconst mapStateToProps = (state: mapState) => {\n  return { currentUser: state.currentUser };\n};\nexport default connect(mapStateToProps, { logOutUser })(Navbar);\n","import { LOG_IN, LOG_OUT} from './types';\n\nexport const logInUser = (currentUser: any) => {\n  return ({type: LOG_IN, payload: currentUser})\n}\n\nexport const logOutUser = () => ({type: LOG_OUT})\n","export const generateId = () => '_' + Math.random().toString(36).substr(2, 9);\n","import React, { useState, ChangeEvent, useEffect } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { CreateIssueProps, mapState } from './interfaces';\nimport { createIssue } from '../../actions/issuesActions';\nimport { fetchProjects, editProject } from '../../actions/projectsActions';\nimport { priorities } from '../../utils/priorities';\nimport {\n  Form,\n  Button,\n  Dropdown,\n  DropdownProps,\n  TextAreaProps,\n} from 'semantic-ui-react';\nimport { generateId } from '../../utils/generateId';\nimport styled from 'styled-components';\nimport LogInWarning from '../../common/logInWarning';\nimport { mediaQueries } from '../../styles/mediaQueries';\n\nconst Container = styled.div`\n  max-width: 60vw;\n  margin-right: auto;\n  margin-left: auto;\n  .submit-button {\n    margin-top: 2em;\n  }\n  @media ${mediaQueries.tablet} {\n    max-width: 80vw;\n  }\n`;\n\nconst CreateIssue = ({\n  history,\n  createIssue,\n  fetchProjects,\n  projects,\n  currentUser,\n}: CreateIssueProps) => {\n  const [issueName, setIssueName] = useState('');\n  const [projectRef, setProjectRef] = useState<any>('');\n  const [priority, setPriority] = useState<any>(' ');\n  const [description, setDescription] = useState<string | number | undefined>(\n    ''\n  );\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const handleSubmit = () => {\n    if (issueName === '' || description === '' || projectRef === '') {\n      setIsError(true);\n    } else {\n      const newIssue = {\n        issueName: issueName,\n        issueId: generateId(),\n        author: currentUser.userName,\n        project: projectRef,\n        description: description,\n        active: true,\n        priority: priority,\n      };\n      createIssue(newIssue);\n      history.push('/');\n    }\n  };\n  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIssueName(e.target.value);\n  };\n\n  const handleDescriptionChange = (\n    e: ChangeEvent<HTMLTextAreaElement>,\n    data: TextAreaProps\n  ) => {\n    setDescription(data.value);\n  };\n\n  const handleProjectRefChange = (\n    e: React.SyntheticEvent<HTMLElement, Event>,\n    data: DropdownProps\n  ) => {\n    setProjectRef(data.value);\n  };\n\n  const handlePriorityChange = (\n    e: React.SyntheticEvent<HTMLElement, Event>,\n    data: DropdownProps\n  ) => {\n    setPriority(data.value);\n  };\n\n  const render = () => {\n    if (!currentUser) return null;\n    if (!currentUser.isSignedIn) return <LogInWarning />;\n    else {\n      return (\n        <Container>\n          <h4>Add a new Issue</h4>\n          <Form>\n            <Form.Field>\n              <label>Name</label>\n              <Form.Input\n                required\n                onChange={handleNameChange}\n                placeholder=\"Issue Name\"\n                error={isError ? { content: 'This field is Required' } : null}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Description</label>\n              <Form.TextArea\n                onChange={handleDescriptionChange}\n                placeholder=\"Description\"\n                error={isError ? { content: 'This field is Required' } : null}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Select a project reference</label>\n              <Dropdown\n                placeholder=\"Select A project Reference\"\n                fluid\n                selection\n                options={projects}\n                onChange={handleProjectRefChange}\n                error={isError}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Select the priority</label>\n              <Dropdown\n                placeholder=\"Select The Priority\"\n                fluid\n                selection\n                options={priorities}\n                onChange={handlePriorityChange}\n              />\n            </Form.Field>\n          </Form>\n          <Button\n            className=\"submit-button\"\n            type=\"submit\"\n            color=\"blue\"\n            onClick={handleSubmit}\n          >\n            Create Issue\n          </Button>\n        </Container>\n      );\n    }\n  };\n  return <div>{render()}</div>;\n};\n\nconst mapStateToProps = (state: mapState) => {\n  return {\n    projects: Object.values(state.projects),\n    currentUser: state.currentUser,\n  };\n};\nexport default connect(mapStateToProps, {\n  createIssue,\n  fetchProjects,\n  editProject,\n})(CreateIssue);\n","import React, { useEffect } from 'react';\nimport User from '../../components/User';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../actions/usersActions';\nimport Spinner from '../../common/spinner';\n\nconst UserPage = ({ match, fetchUser, user }: any) => {\n  useEffect(() => {\n    fetchUser(match.params.id);\n  }, []);\n\n  const render = () => {\n    if (!user) return <Spinner />;\n    return <div>{user.userName}</div>;\n  };\n  return <div>{render()}</div>;\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  return {\n    user: state.users![ownProps.match.params.id],\n    currentUser: state.currentUser,\n  };\n};\nexport default connect(mapStateToProps, { fetchUser })(UserPage);\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Form, Button, InputOnChangeData } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../actions/usersActions';\nimport { createProject } from '../../actions/projectsActions';\nimport { createIssue, fetchIssues } from '../../actions/issuesActions';\nimport { Project } from '../../interfaces';\nimport { generateId } from '../../utils/generateId';\nimport styled from 'styled-components';\nimport LogInWarning from '../../common/logInWarning';\nimport { CreateProjectProps, mapState } from './interfaces';\n\nconst Container = styled.div`\n  max-width: 40vw;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst CreateProject = ({\n  history,\n  fetchUsers,\n  fetchIssues,\n  issues,\n  createProject,\n  currentUser,\n}: CreateProjectProps) => {\n  const [projectName, setProjectName] = useState('');\n  const [isError, setIsError] = useState(false);\n  const projectId = generateId();\n\n  useEffect(() => {\n    fetchUsers();\n    fetchIssues();\n  }, [issues.length]);\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    data: InputOnChangeData\n  ) => {\n    setProjectName(data.value);\n  };\n\n  const handleClick = () => {\n    if (projectName === '') {\n      setIsError(true);\n    } else {\n      const newProject: Project = {\n        projectId: projectId,\n        projectName: projectName,\n        text: projectName,\n        value: projectName,\n      };\n      createProject(newProject);\n      history.push('/');\n    }\n  };\n\n  const render = () => {\n    if (!currentUser) return null;\n    if (!currentUser.isSignedIn) return <LogInWarning />;\n    else {\n      return (\n        <>\n          <Container>\n            <Form>\n              <Form.Field>\n                <label>Project Name</label>\n                <Form.Input\n                  onChange={handleChange}\n                  placeholder=\"Project Name\"\n                  error={isError ? { content: 'This field is Required' } : null}\n                />\n              </Form.Field>\n              <Button color=\"blue\" onClick={handleClick} type=\"submit\">\n                Create Project\n              </Button>\n            </Form>\n          </Container>\n        </>\n      );\n    }\n  };\n  return <div>{render()}</div>;\n};\n\nconst mapStateToProps = (state: mapState) => {\n  return {\n    issues: Object.values(state.issues),\n    users: Object.values(state.users),\n    currentUser: state.currentUser,\n  };\n};\nexport default connect(mapStateToProps, {\n  createProject,\n  createIssue,\n  fetchUsers,\n  fetchIssues,\n})(CreateProject);\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { UserFormProps } from './interfaces';\n\nconst UserForm = ({\n  onNameChange,\n  onPasswordChange,\n  onClick,\n  isError,\n}: UserFormProps) => {\n  return (\n    <Form>\n      <Form.Field>\n        <label>User Name</label>\n        <Form.Input\n          onChange={onNameChange}\n          placeholder=\"User Name\"\n          error={isError ? { content: 'This field is Required' } : null}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>Password</label>\n        <Form.Input\n          onChange={onPasswordChange}\n          placeholder=\"Password\"\n          type=\"password\"\n          error={isError ? { content: 'This field is Required' } : null}\n        />\n      </Form.Field>\n      <Button onClick={onClick} type=\"submit\" color=\"blue\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default UserForm;\n","import React, { useState, ChangeEvent } from 'react';\nimport { InputOnChangeData } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../../actions/usersActions';\nimport { generateId } from '../../utils/generateId';\nimport { Author, CurrentUser } from '../../interfaces';\nimport { History, LocationState } from 'history';\nimport UserForm from '../../components/UserForm';\nimport LogInWarning from '../../common/logInWarning';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 30vw;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ninterface CreateUserProps {\n  history: History<LocationState>;\n  createUser: (user: Author) => void;\n  currentUser: CurrentUser;\n}\n\nconst CreateUser = ({ history, createUser, currentUser }: CreateUserProps) => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [isError, setIsError] = useState(false);\n  const handleNameChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    data: InputOnChangeData\n  ) => {\n    setName(data.value);\n  };\n  const handlePasswordChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    data: InputOnChangeData\n  ) => {\n    setPassword(data.value);\n  };\n  const handleClick = () => {\n    if (name === '' || password === '') {\n      setIsError(true);\n    } else {\n      const newUser = {\n        userId: generateId(),\n        userName: name,\n        userPassword: password,\n        userProjects: [],\n      };\n      createUser(newUser);\n      history.push('/');\n    }\n  };\n  const render = () => {\n    if (!currentUser) return null;\n    if (!currentUser.isSignedIn) return <LogInWarning />;\n    else {\n      return (\n        <Container>\n          <h2>Sign Up</h2>\n          <UserForm\n            onNameChange={handleNameChange}\n            onPasswordChange={handlePasswordChange}\n            onClick={handleClick}\n            isError={isError}\n          />\n        </Container>\n      );\n    }\n  };\n  return <div>{render()}</div>;\n};\n\ninterface mapState {\n  currentUser: CurrentUser;\n}\nconst mapStateToProps = (state: mapState) => {\n  return { currentUser: state.currentUser };\n};\nexport default connect(mapStateToProps, { createUser })(CreateUser);\n","import React from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\n\ninterface ModelTemplateProps {\n  open: boolean;\n  onOpen: (value: boolean) => void;\n  content: string;\n}\n\nfunction ModalTemplate({ open, onOpen, content }: ModelTemplateProps) {\n  return (\n    <Modal centered={false} open={open}>\n      <Modal.Header>Something Went Wrong</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>{content}</Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => onOpen(false)}>OK</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default ModalTemplate;\n","import React, { useState, ChangeEvent } from 'react';\nimport { InputOnChangeData } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { logIn } from '../../api/users/usersRoutes';\nimport { History, LocationState } from 'history';\nimport { logInUser } from '../../actions/currentUserActions';\nimport UserForm from '../../components/UserForm';\nimport { CurrentUser } from '../../interfaces';\nimport ModalTemplate from '../../components/Modal';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 30vw;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ninterface LogInPageProps {\n  history: History<LocationState>;\n  logInUser: (currentUser: CurrentUser) => void;\n}\n\nconst LogInPage = ({ history, logInUser }: LogInPageProps) => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const handleNameChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    data: InputOnChangeData\n  ) => {\n    setName(data.value);\n  };\n  const handlePasswordChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    data: InputOnChangeData\n  ) => {\n    setPassword(data.value);\n  };\n  const handleClick = async () => {\n    const credentials = {\n      userName: name,\n      userPassword: password,\n    };\n    const res = await logIn(credentials);\n    if (!res || res.data === 'Not Allowed') {\n      setIsOpen(true);\n      return;\n    } else {\n      const currentUser = {\n        userId: res.data,\n        userName: credentials.userName,\n      };\n      logInUser(currentUser);\n      history.push('/');\n    }\n  };\n  return (\n    <Container>\n      <h2>Log In</h2>\n      <ModalTemplate\n        open={isOpen}\n        content=\"Incorrect username or password. Username: admin, password: password\"\n        onOpen={setIsOpen}\n      />\n      <UserForm\n        onNameChange={handleNameChange}\n        onPasswordChange={handlePasswordChange}\n        onClick={handleClick}\n        isError={false}\n      />\n    </Container>\n  );\n};\n\nexport default connect(null, { logInUser })(LogInPage);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContainer } from './styles/styledComponents';\nimport HomePage from './pages/HomePage';\nimport IssuePage from './pages/IssuePage';\nimport ProjectPage from './pages/ProjectPage';\nimport ProjectsList from './pages/ProjectsList';\nimport Navbar from './components/Navbar';\nimport CreateIssue from './pages/CreateIssue';\nimport UserPage from './pages/UserPage';\nimport CreateProject from './pages/CreateProject';\nimport CreateUser from './pages/CreateUser';\nimport LogInPage from './pages/LogInPage';\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" render={() => <HomePage />} />\n        <Route exact path=\"/projects\" render={() => <ProjectsList />} />\n        <Route\n          exact\n          path=\"/project/:id\"\n          render={(routeProps) => <ProjectPage {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/issue/:id\"\n          render={(routeProps) => <IssuePage {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/user/:id\"\n          render={(routeProps) => <UserPage {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/create/issue\"\n          render={(routeProps) => <CreateIssue {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/create/project\"\n          render={(routeProps) => <CreateProject {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/create/user\"\n          render={(routeProps) => <CreateUser {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={(routeProps) => <LogInPage {...routeProps} />}\n        />\n      </Switch>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import {LOG_IN, LOG_OUT} from '../actions/types';\n\nconst INITIAL_STATE = {\n  isSignedIn: true,\n  userId: '_imnlsplqf',\n  userName: 'admin'\n}\nexport const currentUserReducer = (state = INITIAL_STATE, action: any ) => {\n  switch(action.type){\n    case LOG_IN:\n      return {...state, isSignedIn: true, ...action.payload}\n    case LOG_OUT:\n      return {...state, isSignedIn: false, userId: null}\n    default:\n      return state;\n  }\n}\n\n","import {combineReducers} from 'redux';\nimport { currentUserReducer } from './currentUserReducer';\nimport {issuesReducer} from './issuesReducer';\nimport {projectsReducer} from './projectsReducer';\nimport {usersReducer} from './usersReducer';\nimport {commentsReducer} from './commentsReducer';\n\nexport const reducers = combineReducers({\n  issues: issuesReducer,\n  projects: projectsReducer,\n  users: usersReducer,\n  currentUser: currentUserReducer,\n  comments: commentsReducer\n})","import {FETCH_ISSUE, FETCH_ISSUES, CREATE_ISSUE, DELETE_ISSUE, EDIT_ISSUE}from '../actions/types';\nimport _ from 'lodash';\nimport {Issue} from '../interfaces';\n\ninterface Action {\n  type: string,\n  payload: any\n}\n\nexport const issuesReducer = (state = {}, action: Action) => {\n  switch(action.type){\n    case FETCH_ISSUES:\n      return {...state, ..._.mapKeys(action.payload, '_id')}\n    case FETCH_ISSUE:\n      return {...state, [action.payload._id]: action.payload}\n    case CREATE_ISSUE:\n      return {...state, [action.payload._id]: action.payload}\n    case EDIT_ISSUE:\n      return {...state, [action.payload._id]: action.payload}\n    case DELETE_ISSUE:\n      return _.omit(state, action.payload)\n    default:\n      return state;\n  }\n}","import {FETCH_PROJECTS, FETCH_PROJECT, EDIT_PROJECT,DELETE_PROJECT} from '../actions/types';\nimport _ from 'lodash';\n\ninterface Action {\n  type: string;\n  payload: any\n}\n\nexport const projectsReducer = (state = {}, action: Action) => {\n  switch(action.type){\n    case FETCH_PROJECTS:\n      return {...state,  ..._.mapKeys(action.payload, '_id')};\n    case FETCH_PROJECT:\n      return {...state, [action.payload._id]: action.payload}\n    case EDIT_PROJECT:\n      return {...state, [action.payload._id]: action.payload}\n    case DELETE_PROJECT:\n      return _.omit(state, action.payload)\n    default:\n      return state;\n  }\n}","import {FETCH_USER,FETCH_USERS, CREATE_USER, DELETE_USER, EDIT_USER } from '../actions/types';\nimport { Author } from '../interfaces';\nimport _ from 'lodash';\n\ninterface Action {\n  type: string,\n  payload: Author | any\n}\n\nexport const usersReducer = (state = {}, action: Action) => {\n  switch(action.type){\n    case FETCH_USERS:\n      return {...state, ..._.mapKeys(action.payload, '_id')}\n    case FETCH_USER:\n      return {...state, [action.payload._id]: action.payload}\n    case CREATE_USER:\n      return {...state, [action.payload._id]: action.payload}\n    case EDIT_USER:\n      return {...state, [action.payload._id]: action.payload}\n    case DELETE_USER:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n}\n","import {FETCH_COMMENTS, FETCH_COMMENT, CREATE_COMMENT, DELETE_COMMENT, EDIT_COMMENT} from '../actions/types';\nimport _ from 'lodash';\n\ninterface Action {\n  type: string,\n  payload: any\n}\n\nexport const commentsReducer = (state = {}, action: Action) => {\n  switch(action.type){\n    case FETCH_COMMENTS:\n      return {...state, ..._.mapKeys(action.payload, '_id')}\n    case FETCH_COMMENT:\n      return {...state, [action.payload._id]: action.payload}\n    case CREATE_COMMENT:\n      return {...state, [action.payload._id]: action.payload}\n    case EDIT_COMMENT:\n      return {...state, [action.payload._id]: action.payload}\n    case DELETE_COMMENT:\n      return _.omit(state, action.payload)\n    default:\n      return state;\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { reducers } from './reducers';\nimport reduxThunk from 'redux-thunk';\nimport reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}